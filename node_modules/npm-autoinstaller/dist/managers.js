'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.allManagers = exports.getManager = exports.getAllManagers = undefined;

var _config = require('./config');

var _manager = require('./manager');

/**
 * get all managers
 *
 * @desc  create manager instances for all defined ones
 * @param {object} config - config for all managers
 */
var getAllManagers = exports.getAllManagers = function getAllManagers(managerConfig) {
  var managers = [];

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = Object.keys(managerConfig)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var manager = _step.value;

      try {
        managers.push(new _manager.Manager(manager, managerConfig[manager]));
      } catch (e) {}
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return managers;
};

/**
 * get manager
 *
 * @desc    return a manager by its name
 * @param   {string} name - name of the manager
 * @return  {Manager}
 */
var getManager = exports.getManager = function getManager(name) {
  return allManagers.find(function (manager) {
    return manager.name === name;
  });
};

var allManagers = exports.allManagers = getAllManagers(_config.config);